name: Test

on:
  push:
    branches:
    - test
  pull_request:
    branches:
    - main

jobs:
  prepare:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y netcat

    - name: Create directories for Cassandras clusters
      run: mkdir -p docker/data/cassandra1 docker/data/cassandra2 docker/data/cassandra3  

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install Pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Start containers
      run: docker-compose -f "docker-compose.yaml" up -d --build && sleep 5

    # - name: Docker info
    #   run: docker logs cassandra3      

    - name: Docker list 
      run: |
        echo "Docker status"
        MAX_ATTEMPTS=10
        COMMAND='docker ps'
        COUNT=0
        until  $COUNT -eq $MAX_ATTEMPTS 
        do          
          echo OUTPUT=$($COMMAND)   
          sleep 10
          COUNT=$((COUNT+1))
          echo "Attempt: $COUNT/$MAX_ATTEMPTS"
        done
        if [ $COUNT -eq $MAX_ATTEMPTS ]; then
          echo "STOP LOOP"
          exit 1
        fi

    - name: Wait for Cassandra to become ready
      run: |
        echo "Waiting for Cassandra to become ready..."
        MAX_ATTEMPTS=10
        COMMAND='docker exec cassandra3 cqlsh --debug cassandra3 9044 --execute="DESCRIBE SCHEMA;"'
        COUNT=0
        until OUTPUT=$($COMMAND 2>&1) || [ $COUNT -eq $MAX_ATTEMPTS ]
        do
          echo "$OUTPUT"
          sleep 45
          COUNT=$((COUNT+1))
          echo "Attempt: $COUNT/$MAX_ATTEMPTS"
        done
        if [ $COUNT -eq $MAX_ATTEMPTS ]; then
          echo "Cassandra did not become ready within the expected time. Exiting..."
          exit 1
        fi
        echo "Cassandra is ready!"

    - name: Docker info
      run: docker ps
    
    - name: Cassandra cluster status info
      run: docker exec cassandra1 nodetool status

    - name: Run Python script
      run: pipenv run python scripts/generate_data.py

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yaml" down
